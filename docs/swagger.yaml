definitions:
  presenter.ActorRequest:
    properties:
      birthday:
        type: string
      filmsId:
        items:
          type: integer
        type: array
      name:
        type: string
      sex:
        type: string
    type: object
  presenter.ActorResponse:
    properties:
      birthday:
        type: string
      filmsId:
        items:
          type: integer
        type: array
      id:
        type: integer
      name:
        type: string
      sex:
        type: string
    type: object
  presenter.FilmRequest:
    properties:
      actorsId:
        items:
          type: integer
        type: array
      description:
        maxLength: 1000
        type: string
      name:
        maxLength: 150
        minLength: 1
        type: string
      rating:
        maximum: 10
        minimum: 0
        type: integer
      releaseDate:
        type: string
    type: object
  presenter.FilmResponse:
    properties:
      actorsId:
        items:
          type: integer
        type: array
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      rating:
        type: integer
      releaseDate:
        type: string
    type: object
  presenter.Login:
    properties:
      password:
        maxLength: 20
        minLength: 8
        type: string
      username:
        minLength: 2
        type: string
    type: object
  presenter.Register:
    properties:
      password:
        maxLength: 20
        minLength: 8
        type: string
      username:
        minLength: 2
        type: string
    type: object
  presenter.UserRequest:
    properties:
      password:
        maxLength: 20
        minLength: 8
        type: string
      role:
        type: string
      username:
        minLength: 2
        type: string
    type: object
  presenter.UserResponse:
    properties:
      id:
        type: integer
      role:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /actor:
    get:
      consumes:
      - application/json
      description: Get actors
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/presenter.ActorResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
      summary: Get actors
      tags:
      - actors
  /actor/{id}:
    delete:
      consumes:
      - application/json
      description: Delete actor by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
      summary: Delete actor by id
      tags:
      - actors
    get:
      consumes:
      - application/json
      description: Get actor by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenter.ActorResponse'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
      summary: Get actor by id
      tags:
      - actors
    patch:
      consumes:
      - application/json
      description: Patch actor by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: actor
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/presenter.ActorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenter.ActorResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
      summary: Patch actor by id
      tags:
      - actors
    put:
      consumes:
      - application/json
      description: Put actor by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: actor
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/presenter.ActorRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenter.ActorResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
      summary: Put actor by id
      tags:
      - actors
  /auth/authenticate:
    post:
      consumes:
      - application/json
      description: Authenticate to account
      parameters:
      - description: login
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/presenter.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Authenticate to account
      tags:
      - accounts
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register an account
      parameters:
      - description: register
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/presenter.Register'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Register an account
      tags:
      - accounts
  /film:
    get:
      consumes:
      - application/json
      description: Get films
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/presenter.FilmResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
      summary: Get fils
      tags:
      - films
    post:
      consumes:
      - application/json
      description: Create film
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: film
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/presenter.FilmRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenter.FilmResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
      summary: Create film
      tags:
      - films
  /film/{id}:
    delete:
      consumes:
      - application/json
      description: Delete film by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
      summary: Delete film by id
      tags:
      - films
    get:
      consumes:
      - application/json
      description: Get film by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenter.FilmResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
      summary: Get film by id
      tags:
      - films
    patch:
      consumes:
      - application/json
      description: Patch film by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: film
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/presenter.FilmRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenter.FilmResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
      summary: Patch film by id
      tags:
      - films
    put:
      consumes:
      - application/json
      description: Put film by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: film
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/presenter.FilmRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenter.FilmResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
      summary: Put film by id
      tags:
      - films
  /film/search:
    get:
      consumes:
      - application/json
      description: Search films by name or actor
      parameters:
      - description: field
        in: query
        name: field
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/presenter.FilmResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
      summary: Search films
      tags:
      - films
  /user:
    get:
      consumes:
      - application/json
      description: Get users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/presenter.UserResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
      summary: Get users
      tags:
      - users
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: user
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/presenter.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
      summary: Delete user by id
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get user by id
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenter.UserResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
      summary: Get user by id
      tags:
      - users
    patch:
      consumes:
      - application/json
      description: Patch user by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: user
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/presenter.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenter.UserResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
      summary: Patch user by id
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Put user by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: user
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/presenter.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/presenter.UserResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
      summary: Put user by id
      tags:
      - users
swagger: "2.0"
